
// AUTO GENERATED by vnxcppcodegen

#include <vnx/Topic.h>

#include <example/CameraSensorBase.hxx>
#include <example/DatabaseBase.hxx>
#include <example/ImageProcessorBase.hxx>
#include <example/LidarInfo.hxx>
#include <example/LidarPointCloud.hxx>
#include <example/LidarProcessorBase.hxx>
#include <example/LidarSensorBase.hxx>
#include <example/Object.hxx>
#include <example/Table.hxx>
#include <example/Transaction.hxx>
#include <example/User.hxx>
#include <example/lidar_point_t.hxx>
#include <example/transaction_type_e.hxx>


namespace example {

std::shared_ptr<vnx::Topic> transactions = vnx::get_topic("example", "transactions");

static void register_all_types() {
	vnx::register_type_code(example::CameraSensorBase::create_type_code());
	vnx::register_type_code(example::DatabaseBase::create_type_code());
	vnx::register_type_code(example::ImageProcessorBase::create_type_code());
	vnx::register_type_code(example::LidarInfo::create_type_code());
	vnx::register_type_code(example::LidarPointCloud::create_type_code());
	vnx::register_type_code(example::LidarProcessorBase::create_type_code());
	vnx::register_type_code(example::LidarSensorBase::create_type_code());
	vnx::register_type_code(example::Object::create_type_code());
	vnx::register_type_code(example::Table::create_type_code());
	vnx::register_type_code(example::Transaction::create_type_code());
	vnx::register_type_code(example::User::create_type_code());
	vnx::register_type_code(example::lidar_point_t::create_type_code());
	vnx::register_type_code(example::transaction_type_e::create_type_code());
}

static struct vnx_static_init {
	vnx_static_init() {
		register_all_types();
	}
} vnx_static_init_;

} // namespace example
